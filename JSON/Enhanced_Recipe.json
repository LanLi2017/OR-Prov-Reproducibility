[
  {
    "op": "core/text-transform", 
    "description": "Text transform on cells in column sponsor using expression value.toLowercase()", 
    "engineConfig": {
      "facets": [], 
      "mode": "row-based"
    }, 
    "columnName": "sponsor", 
    "expression": "value.toLowercase()", 
    "onError": "keep-original", 
    "repeat": false, 
    "repeatCount": 10
  }, 
  {
    "op": "core/mass-edit", 
    "description": "Mass edit cells in column sponsor", 
    "engineConfig": {
      "facets": [], 
      "mode": "row-based"
    }, 
    "columnName": "sponsor", 
    "expression": "value", 
    "edits": [
      {
        "fromBlank": false, 
        "fromError": false, 
        "from": [
          "red star line - antwerpen - ny", 
          "red star line - antwerpen -ny", 
          "red star line - antwerpen ny", 
          "red star line -antwerpen ny", 
          "red star line - antwerpen  - ny", 
          "red star line - antwerpen  ny", 
          "red star line -antwerpen - ny", 
          "red star line -antwerpen -ny", 
          "red star line- antwerpen  ny", 
          "red star line- antwerpen -ny"
        ], 
        "to": "red star line - antwerpen - ny"
      }, 
      {
        "fromBlank": false, 
        "fromError": false, 
        "from": [
          "norddeutscher lloyd bremen", 
          "norddeutscher lloyd - bremen", 
          "norddeutscher lloyd  bremen", 
          "norddeutscher lloyd bremen;", 
          "norddeutscher lloyd, bremen", 
          "bremen norddeutscher lloyd", 
          "norddeutscher lloyd -  bremen", 
          "norddeutscher lloyd -bremen"
        ], 
        "to": "norddeutscher lloyd bremen"
      }, 
      {
        "fromBlank": false, 
        "fromError": false, 
        "from": [
          "fifth avenue hotel", 
          "(fifth avenue hotel)", 
          "(fifth avenue hotel?)", 
          "fifth avenue hotel (?)", 
          "(fifth avenue hotel?}", 
          "fifth avenue hotel;"
        ], 
        "to": "fifth avenue hotel"
      }
    ]
  }, 
  {
    "op": "core/text-transform", 
    "description": "Text transform on cells in column event using expression value.trim()", 
    "engineConfig": {
      "facets": [], 
      "mode": "row-based"
    }, 
    "columnName": "event", 
    "expression": "value.trim()", 
    "onError": "keep-original", 
    "repeat": false, 
    "repeatCount": 10
  }, 
  {
    "op": "core/text-transform", 
    "description": "Text transform on cells in column event using expression value.toLowercase()", 
    "engineConfig": {
      "facets": [], 
      "mode": "row-based"
    }, 
    "columnName": "event", 
    "expression": "value.toLowercase()", 
    "onError": "keep-original", 
    "repeat": false, 
    "repeatCount": 10
  }, 
  {
    "op": "core/mass-edit", 
    "description": "Mass edit cells in column venue", 
    "engineConfig": {
      "facets": [], 
      "mode": "row-based"
    }, 
    "columnName": "venue", 
    "expression": "value", 
    "edits": [
      {
        "fromBlank": false, 
        "fromError": false, 
        "from": [
          "SOC;", 
          "SOC", 
          "[SOC?];", 
          "SOC(?);", 
          "SOC.", 
          "[SOC]", 
          "SOC?;", 
          "(SOC);", 
          "(SOC?)", 
          "(SOC?);", 
          "SOC (?);", 
          "SOC(?):", 
          "[?SOC];", 
          "[SOC;]", 
          "[SOC?]", 
          "[SOC];"
        ], 
        "to": "SOC;"
      }, 
      {
        "fromBlank": false, 
        "fromError": false, 
        "from": [
          "GOVT;", 
          "GOVT(?);", 
          "GOV'T;", 
          "[GOVT?];", 
          "GOV'T", 
          "GOV'T.", 
          "GOVT", 
          "GOVT?;", 
          "[GOVT?]", 
          "[GOVT];"
        ], 
        "to": "GOVT;"
      }, 
      {
        "fromBlank": false, 
        "fromError": false, 
        "from": [
          "COM", 
          "COM.", 
          "[COM]", 
          "(COM?);", 
          "COM(?);", 
          "COM.;", 
          "[COM?];", 
          "[COM}"
        ], 
        "to": "COM"
      }, 
      {
        "fromBlank": false, 
        "fromError": false, 
        "from": [
          "PROF;", 
          "PROF", 
          "PROF(?);", 
          "PROF.", 
          "PROF?;", 
          "[PROF?];", 
          "[PROF]"
        ], 
        "to": "PROF;"
      }
    ]
  }, 
  {
    "op": "core/column-split", 
    "description": "Split column physical_description by separator", 
    "engineConfig": {
      "facets": [], 
      "mode": "row-based"
    }, 
    "columnName": "physical_description", 
    "guessCellType": true, 
    "removeOriginalColumn": true, 
    "mode": "separator", 
    "separator": ";", 
    "regex": false, 
    "maxColumns": 0
  }, 
  {
    "op": "core/text-transform", 
    "description": "Text transform on cells in column call_number using expression value.toDate()", 
    "engineConfig": {
      "facets": [], 
      "mode": "row-based"
    }, 
    "columnName": "call_number", 
    "expression": "value.toDate()", 
    "onError": "keep-original", 
    "repeat": false, 
    "repeatCount": 10
  }, 
  {
    "op": "core/mass-edit", 
    "description": "Mass edit cells in column event", 
    "engineConfig": {
      "facets": [], 
      "mode": "row-based"
    }, 
    "columnName": "event", 
    "expression": "value", 
    "edits": [
      {
        "fromBlank": false, 
        "fromError": false, 
        "from": [
          "dinner", 
          "[dinner]", 
          "(dinner)", 
          "dinner;", 
          "dinner (?)", 
          "dinner(?)", 
          "[dinner?]", 
          "(?dinner?)", 
          "[?dinner?]", 
          "[dinner ?]", 
          "dinner,", 
          "dinner?"
        ], 
        "to": "dinner"
      }
    ]
  }, 
  {
    "row": "8643", 
    "cell": "3", 
    "old": "{\"v\":\"middag-dinner\"}", 
    "new": "{\"v\":\"middag/dinner\"}", 
    "op": "custom/single-edit"
  }, 
  {
    "op": "core/text-transform", 
    "description": "Text transform on cells in column id using expression value.toNumber()", 
    "engineConfig": {
      "facets": [], 
      "mode": "row-based"
    }, 
    "columnName": "id", 
    "expression": "value.toNumber()", 
    "onError": "keep-original", 
    "repeat": false, 
    "repeatCount": 10
  }
]